<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>board-sql.xml</comment>

	<entry key="selectBoardAll">
		SELECT BOARD_NM FROM BOARD_TYPE
		WHERE BOARD_CD = ?
	</entry>

	<!-- 게시글 수 조회 -->
	<entry key="getListCount">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD = ?
		AND
		BOARD_ST = 'Y'
	</entry>


	<!-- 게시글 목록 조회 -->
	<entry key="selectBoardList">
	   	    with row_check as
	        (
	            select 
	                        row_number() over(order by a.board_no desc) as rn    
	                ,       a.*
	            from board a
	            order by board_no desc
	        )
		SELECT
						a.BOARD_NO
				,		a.BOARD_TITLE
	            ,       a.BOARD_CONTENT
				,		b.MEMBER_NM
				,		TO_CHAR(a.BOARD_DT, 'YYYY-MM-DD') AS BOARD_DT
				,		a.READ_COUNT
				,		c.IMG_RENAME
				,		b.member_no
		FROM row_check a
		left join member b
			on	b.member_no		=	a.member_no
		left join board_img c
			on	c.board_no		=	a.board_no
			and	c.img_level		=	'0'
		WHERE 	a.rn BETWEEN ? AND ?
		AND		BOARD_CD	=	?
		AND		BOARD_ST	=	'Y'
	</entry>

	<!-- 게시글 상세 조회 -->
	<entry key="selectBoardDetail">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_DT,
		MODIFY_DT, READ_COUNT, MEMBER_NM, MEMBER_NO, MEMBER_PROFILE,
		BOARD_NM
		FROM BOARD
		JOIN MEMBER USING (MEMBER_NO)
		JOIN BOARD_TYPE USING(BOARD_CD)
		WHERE BOARD_NO = ?
		AND BOARD_ST = 'Y'
	</entry>


	<entry key="ReadCountUp">
		UPDATE BOARD SET READ_COUNT = READ_COUNT + 1
		WHERE
		BOARD_NO = ?

	</entry>

	<!-- 게시글 이미지리스트 조회 -->
	<entry key="selectImageList">
		SELECT * FROM BOARD_IMG
		WHERE BOARD_NO = ?
	</entry>

	<entry key="boardNo">
		SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
	</entry>

	<entry key="boardInsert">
		INSERT INTO BOARD VALUES(?, ?, ?,
		SYSDATE, NULL, 0,
		'Y',
		?, ?)
	</entry>

	<entry key="imageInsert">
		INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL, ?, ?,
		?, ?)
	</entry>

	<!-- 게시글 수정 -->
	<entry key="boardUpdate">
		UPDATE BOARD SET BOARD_CONTENT = ?,
		BOARD_TITLE = ?,
		MODIFY_DT = DEFAULT
		WHERE BOARD_NO = ?
	</entry>

	<entry key="imageUpdate">
		UPDATE BOARD_IMG SET IMG_RENAME = ?,
		IMG_ORIGINAL = ?
		WHERE BOARD_NO = ? AND
		IMG_LEVEL = ?
	</entry>


	<entry key="deleteBoardImage">
		DELETE FROM BOARD_IMG
		WHERE BOARD_NO = ?
		AND IMG_LEVEL
		IN(
	</entry>

	<entry key="boardDelete">
		UPDATE BOARD SET BOARD_ST = 'N'
		WHERE BOARD_NO = ?
	</entry>

	<entry key="selectBoardNo">
		SELECT BOARD_NO FROM BOARD
		WHERE BOARD_CD = ?

	</entry>

	<!-- 썸네일 찾기 -->
	<entry key="selectThumbnail">
		SELECT BOARD_NO, IMG_NO, IMG_RENAME, IMG_ORIGINAL, IMG_LEVEL FROM BOARD_IMG
		JOIN BOARD USING (BOARD_NO)
		JOIN BOARD_TYPE USING(BOARD_CD)
		WHERE IMG_LEVEL = 0
		AND BOARD_CD = ?
		ORDER BY BOARD_NO DESC

	</entry>

	<!-- 좋아요 했을 시  -->
	<entry key="insertLike">
		INSERT INTO BOARD_LIKE VALUES(?,?)
	</entry>
	<!-- 좋아요 취소 했을 시 -->
	<entry key="deleteLike">
		DELETE FROM BOARD_LIKE WHERE MEMBER_NO=? AND BOARD_NO=?
	</entry>
	<!-- 특정게시글의 좋아요 수 조회  -->
	<entry key="selectLike">
		SELECT COUNT(*) FROM BOARD_LIKE WHERE BOARD_NO=?

	</entry>
	<entry key="searchBoard">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_ID, MEMBER_TEL, BOARD_ST
		FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_TITLE = ?

	</entry>
	
	
	<!-- 좋아요 했던 게시글인지 조회 -->
	<entry key="selectMemberLike">
		SELECT BOARD_NO FROM BOARD_LIKE WHERE MEMBER_NO=? AND BOARD_NO=?
	</entry>
	
	<!-- 관리자가 게시글 삭제 -->
	<entry key="managerBoardDelete">
		UPDATE BOARD SET
		BOARD_ST = DECODE(BOARD_ST , 'Y','N','N','Y')
		WHERE BOARD_TITLE = ?
	</entry>

	<entry key = "boardListPopularity">
	with row_check as
	        (
	            select 
	                        row_number() over(order by a.board_no desc) as rn    
	                ,       a.*
	            from board a
	            order by board_no desc
	        )
		SELECT
						a.BOARD_NO
				,		a.BOARD_TITLE
	            ,       a.BOARD_CONTENT
				,		b.MEMBER_NM
				,		TO_CHAR(a.BOARD_DT, 'YYYY-MM-DD') AS BOARD_DT
				,		a.READ_COUNT
				,		c.IMG_RENAME
		FROM row_check a
		left join member b
			on	b.member_no		=	a.member_no
		left join board_img c
			on	c.board_no		=	a.board_no
			and	c.img_level		=	'0'
            join follow d on b.member_no = d.member_no
		WHERE 	a.rn BETWEEN 1 AND 10
		AND		BOARD_CD	=	1
		AND		BOARD_ST	=	'Y'

</entry>

<entry key="getFollowListCount">
	SELECT COUNT(*)  FROM BOARD
		join follow USING(member_no)
	WHERE BOARD_CD = ?
	AND follower_no= ?
	AND BOARD_ST = 'Y'
</entry>

<entry key="selectFollowBoardList">
	with row_check as
	        (
	            select 
	                        row_number() over(order by a.board_no desc) as rn    
	                ,       a.*
	            from board a
	            order by board_no desc
	        )
		SELECT
						a.BOARD_NO
				,		a.BOARD_TITLE
	           	,		TO_CHAR(a.BOARD_DT, 'YYYY-MM-DD') AS BOARD_DT
				,		b.MEMBER_NM
				,		a.BOARD_DT
				,		a.READ_COUNT
				,		c.IMG_RENAME
				
		FROM row_check a
		left join member b
			on	b.member_no		=	a.member_no
		left join board_img c
			on	c.board_no		=	a.board_no
			and	c.img_level		=	'0'
		join follow d
			on 	d.member_no		= 	b.member_no
		WHERE 	a.rn BETWEEN ? AND ?
		AND		BOARD_CD	=	?
		AND		BOARD_ST	=	'Y'
		and 	follower_no 	= 	?
</entry>


	<entry key = "selectBoardPopularity">
   	     	    with row_check as
	        (
	            select 
	            
	                        row_number() over(order by a.board_no desc) as rn    
	                ,       a.*
	            from board a
	            order by board_no desc
	        )

     SELECT 
       TO_CHAR(a.BOARD_DT, 'YYYY-MM-DD') AS BOARD_DT,
     a.*, b.member_nm, c.img_rename
                            FROM row_check a
                            LEFT JOIN (
                            SELECT board_no, COUNT(*) as likes_count
                            FROM board_like
                           
                            GROUP BY board_no 
                            ) l ON a.board_no = l.board_no
                             join member b on a.member_no = b.member_no
                             left join board_img c on a.board_no	 =	c.board_no
                            and	c.img_level		=	'0'
                            where	a.rn BETWEEN ? AND ?
                            and         a.BOARD_CD	=	?
                            AND		a.BOARD_ST	=	'Y'
                            ORDER BY COALESCE(l.likes_count, 0) DESC

	</entry>

	<entry key="insertNotice">
		INSERT INTO BOARD VALUES(155, ?, ?,
		SYSDATE, NULL, 0,
		'Y',
		?, ?)
	</entry>

	<entry key="selectNotice">
		SELECT BOARD_TITLE, BOARD_CONTENT
		FROM BOARD
		WHERE BOARD_CD = 2
		AND BOARD_NO = 155
	</entry>

	<entry key="noticeImage">
		SELECT IMG_RENAME, IMG_ORIGINAL, BOARD_NO
		FROM BOARD_IMG
		WHERE BOARD_NO = 155
	</entry>

	<entry key="noticeUpdate">
		UPDATE BOARD SET BOARD_CONTENT = ?,
		BOARD_TITLE = ?,
		MODIFY_DT = DEFAULT
		WHERE BOARD_NO = 155
	</entry>

	<entry key="noticeImageUpdate">
		UPDATE BOARD_IMG SET IMG_RENAME = ?,
		IMG_ORIGINAL = ?
		WHERE BOARD_NO = 155 AND
		IMG_LEVEL = ?
	</entry>

	<entry key="selectBoardCode">
		select board_cd
		from board
		where board_cd = 2
	</entry>

	<entry key="noticeInsert">
		INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL, ?, ?,
		?, 155)
	</entry>

</properties>
